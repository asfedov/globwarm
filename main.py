from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler, CallbackContext


user_data = {}

def start(update: Update, context: CallbackContext) -> int:
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä CO‚ÇÇ –≤—ã–±—Ä–æ—Å–æ–≤ –æ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è. üöó\n",
        reply_markup=ReplyKeyboardMarkup([['–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å', "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]], one_time_keyboard=True)
    )
    return 0

def stats(update: Update, context: CallbackContext) -> int:
    update.message.reply_text('–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    return ConversationHandler.END


def survey(update: Update, context: CallbackContext) -> int:
    reply_keyboard = [['–ë–µ–Ω–∑–∏–Ω', '–î–∏–∑–µ–ª—å']]
    update.message.reply_text(
        
        "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ç–∏–ø —Ç–æ–ø–ª–∏–≤–∞:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
    )
    return 1

def fuel_type(update: Update, context: CallbackContext) -> int:
    user_data['fuel_type'] = update.message.text.lower()
    update.message.reply_text("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ –≤ –ª/100 –∫–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 7.5):")
    return 2

def fuel_consumption(update: Update, context: CallbackContext) -> int:
    try:
        user_data['fuel_consumption'] = float(update.message.text)
    except ValueError:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: 6.3")
        return 2

    update.message.reply_text("–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é —Ç—ã –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å? (–Ω–∞–ø—Ä–∏–º–µ—Ä: 3)")
    return 3

def ask_days_per_week(update: Update, context: CallbackContext) -> int:
    try:
        context.user_data['days_per_week'] = int(update.message.text)
    except ValueError:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 4")
        return 3
    update.message.reply_text("–°–∫–æ–ª—å–∫–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ —Ç—ã –æ–±—ã—á–Ω–æ –ø—Ä–æ–µ–∑–∂–∞–µ—à—å –≤ –¥–µ–Ω—å, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑—É–µ—à—å—Å—è –º–∞—à–∏–Ω–æ–π?")
    return 4 

def ask_km_per_day(update: Update, context: CallbackContext) -> int:
    try:
        context.user_data['days_per_week'] = int(update.message.text)
    except ValueError:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 4")
        return 4

    fuel_type = context.user_data['fuel_type']
    fuel_consumption = context.user_data['fuel_consumption']
    days_per_week = context.user_data['days_per_week']
    km_per_day = context.user_data['km_per_day']


    coef = 2.31 if fuel_type == '–±–µ–Ω–∑–∏–Ω' else 2.68    #—Å–∫–æ–ª—å–∫–æ CO2 –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞ –ª–∏—Ç—Ä
    co2 = (fuel_consumption / 100) * (days_per_week * 4 * km_per_day) * coef    #–ª–∏—Ç—Ä–æ–≤ –Ω–∞ 100 –∫–º / 100 --> –ª–∏—Ç—Ä–æ–≤ –Ω–∞ 1 –∫–º  * –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –≤ –º–µ—Å—è—Ü (–¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª–µ * 4 –Ω–µ–¥–µ–ª–∏ * –∫–º –≤ –¥–µ–Ω—å) * CO2 –∑–∞ –ª–∏—Ç—Ä 

    update.message.reply_text(
        f"üå± –ü–æ —Ç–≤–æ–µ–º—É –æ–±—ã—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É —Ç—ã –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—à—å –ø—Ä–∏–º–µ—Ä–Ω–æ:\n"
        f"üí® *{co2:.2f} –∫–≥ CO‚ÇÇ –≤ –º–µ—Å—è—Ü*.",
        parse_mode='Markdown'
    )

    context.user_data.clear()
    return ConversationHandler.END


def cancel(update: Update, context: CallbackContext) -> int:
    update.message.reply_text('–û–∫–µ–π, –ø–æ–∫–∞! üëã')
    return ConversationHandler.END

def main():
    updater = Updater("", use_context=True)
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
    entry_points=[CommandHandler('start', start)],
    states={
        0: {
            [MessageHandler(Filters.regex('^–ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å$'), survey)]
            [MessageHandler(Filters.regex('^–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞$'), stats)]
            },
        1: [MessageHandler(Filters.regex('^(–ë–µ–Ω–∑–∏–Ω|–î–∏–∑–µ–ª—å)$'), fuel_type)],
        2: [MessageHandler(Filters.text & ~Filters.command, fuel_consumption)],
        3: [MessageHandler(Filters.text & ~Filters.command, ask_days_per_week)],
        4: [MessageHandler(Filters.text & ~Filters.command, ask_km_per_day)],

    },
    fallbacks=[CommandHandler('cancel', cancel)]
    )

    dp.add_handler(conv_handler)

    updater.start_polling()
    updater.idle()

    

if __name__ == '__main__':
    main()
